cdac pgdai python lab exercise 8 
Shivam Giri
---------------------------------------------------------------------------------------------------
1: Subtract a week ( 7 days)  from a given date in Python

Solution :
--------------------------------------------
from datetime import datetime, timedelta

given_date = datetime(2024, 9, 23)
new_date = given_date - timedelta(days=7)

print("current date is :", given_date.strftime("%Y-%m-%d"))
print("date before week is :", new_date.strftime("%Y-%m-%d"))
----------------------------------------------------------------------------------------------------
2: Add week ( 7 days) and 12 hours to a given date
Given:
# 2023-03-22 10:00:00
given_date = datetime(2023, 3, 22, 10, 0, 0)
Expected output:
2023-03-29 22:00:00
---------------------------------------
Solution :
from datetime import datetime, timedelta

given_date = datetime(2023, 3, 22, 10, 0, 0)
new_date = given_date + timedelta(days=7, hours=12)


print("given time:", given_date.strftime("%Y-%m-%d %H:%M:%S"))
print("expected time in given format:", new_date.strftime("%Y-%m-%d %H:%M:%S"))

-----------------------------------------------------------------------------------------------------
3: Print ten dates, each two a week apart, starting from today, in the form YYYY-MM-DD.

Solution : 

from datetime import datetime , timedelta

todays_date = datetime.now()
nextdate = todays_date
for i in range(1,11):
    print ("Date ", i , " is : ", nextdate.strftime("%Y-%m-%d %H:%M:%S"))
    nextdate = nextdate + timedelta(days = 14)
   
---------------------------------------------------------------------------------------------------
4: Calculate number of days between two given dates
Given:
# 2020-02-25
date_1 = datetime(2020, 2, 25)
# 2020-09-17
date_2 = datetime(2020, 9, 17)
Expected output:
205 days

Solution :

from datetime import datetime

date_1 = datetime(2020, 2, 25)
date_2 = datetime(2020, 9, 17)

days_difference = (date_2 - date_1).days

print(f"{days_difference} days")


-----------------------------------------------------------------------------------------------------
5:  Write a Python script to display the 
a) Current date and time
b) Current year in full
c) Month of year full name
d) Weekday of the week
e) Day of the month
f) Day of week in full name
6: Python program to convert a string to datetime:
          'Jul 1 2016  2:43AM' into 2016-07-01 02:43:00
------------------------------------------------
Ssolution :

from datetime import datetime , timedelta
Curr_time = datetime.now()
print("current time is :" , Curr_time)
print("current year is full is :" , Curr_time.strftime("%Y"))
print("current month name is : ", Curr_time.strftime("%B"))
print("Weekday of current date is :" , Curr_time.weekday())
print("Day of the month is : ", Curr_time.strftime("%d"))
print("Day of week in full name is : " ,Curr_time.strftime("%A") )

custom_date = "Jul 1 2016  2:43AM"
print("given string is : ", custom_date)
date_object = datetime.strptime(custom_date,"%b %d %Y %I:%M%p")
print("The conversion of string to datetime is :" , date_object.strftime("%Y-%m-%d %H:%M:%S"))


-----------------------------------------------------------------------------------------------------
7: Python program to convert Year/Month/Day to Day of Year.

Solution :
from datetime import datetime

year = 2023
month = 9
day = 23
custom_date = date_object = datetime(year, month, day)

day_of_year = date_object.timetuple().tm_yday

print("the number of day of date ", custom_date.strftime('%Y-%m-%d') , "is " , day_of_year)

-----------------------------------------------------------------------------------------------------
8: Follow the steps:
Create a class, Triangle. Its __init__() method should take self, angle1, angle2, and angle3 as arguments. Make sure to set these appropriately in the body of the __init__()method.
Create a variable named number_of_sides and set it equal to 3.
Create a method named check_angles. The sum of a triangle's three angles is It should return True if the sum of self.angle1, self.angle2, and self.angle3 is equal 180, and False otherwise.
Create a variable named my_triangle and set it equal to a new instance of your Triangle class. Pass it three angles that sum to 180 (e.g. 90, 30, 60).
Print out my_triangle.number_of_sides and print out my_triangle.check_angles().

Solution :


class Triangle:
    def __init__(self,angle1,angle2,angle3):
        self.angle1 = angle1
        self.angle2=angle2
        self.angle3=angle3
        self.my_triangle_sides = 3

    def check_angles(self):
        print("The three angles of triangle are ",self.angle1 , " " , self.angle2 , " ", self.angle3)
        if(self.angle1+self.angle2+self.angle3 == 180):
            print("True : The sum of three angles is 180")
        else:
            print("Fales : Sum of three angles is not 180")

my_triangle = Triangle(30,60,90)
print("my triangle sides are : ",my_triangle.my_triangle_sides)
my_triangle.check_angles()
    
-----------------------------------------------------------------------------------------------------
9: Define a class called Songs, it will show the lyrics of a song. Its __init__() method should have two arguments:self and lyrics.lyricsis a list. Inside your class create a method called sing_me_a_song that prints each element of lyricson his own line. Define a varible:
happy_bday = Song(["May god bless you, ",
                   "Have a sunshine on you,",
                   "Happy Birthday to you !"])
Call the sing_me_song method on this variable.

Solution :
class Songs:
    def __init__(self, lyrics):
        self.lyrics = lyrics 

    def sing_me_a_song(self):
        for line in self.lyrics:
            print(line)
happy_bday = Songs([
    "May god bless you,",
    "Have a sunshine on you,",
    "Happy Birthday to you!"
])

happy_bday.sing_me_a_song()

-----------------------------------------------------------------------------------------------------
10: Define a class called Lunch.Its __init__() method should have two arguments:selfanf menu.Where menu is a string. Add a method called menu_price.It will involve a ifstatement:
if "menu 1" print "Your choice:", menu, "Price 12.00", if "menu 2" print "Your choice:", menu, "Price 13.40", else print "Error in menu".
To check if it works define: Paul=Lunch("menu 1") and call Paul.menu_price().

Solution :

class Lunch:
    def __init__(self, menu):
        self.menu = menu 

    def menu_price(self):
        if self.menu == "menu 1":
            print("Your choice:", self.menu, "Price 12.00")
        elif self.menu == "menu 2":
            print("Your choice:", self.menu, "Price 13.40")
        else:
            print("Error in menu")

Paul = Lunch("menu 1")
Paul.menu_price()

-----------------------------------------------------------------------------------------------------
11: Write a Python class which has two methods get_String and print_String. get_String accept a string from the user and print_String print the string in upper case.

Solution :

class upperString:
    def __init__(self):
        self.string = ""
    def get_string(self):
        self.string = input("Enter your string :")
    def print_string(self):
        print((self.string.upper()))

n1 = upperString()
n1.get_string()
n1.print_string()
    
-----------------------------------------------------------------------------------------------------
12: Write a program to find the area and perimeter of a rectangle using classes and objects. Program output should be like this:

Solution :
class AreaPeri:
    def __init__(self):
        self.Length = int(input("Enter the Length of Rectangle: "))
        self.Breadth = int(input("Enter the Breadth of Rectangle: "))
        
    def menu(self):
        while True:
            print("""\n1. Area
2. Perimeter
3. Exit""")
            a = int(input("Enter your choice: "))
            if a == 1:
                print("The Area of the rectangle is:", self.Length * self.Breadth)
            elif a == 2:
                print("The Perimeter of the rectangle with length", self.Length, "and breadth", self.Breadth, "is", 2 * (self.Length + self.Breadth))
            elif a == 3:
                print("Exiting the program.")
                break
            else:
                print("Invalid choice. Please try again.")


rectangle = AreaPeri()
rectangle.menu()
 
        


